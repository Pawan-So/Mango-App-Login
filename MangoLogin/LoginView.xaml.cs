using System;
using System.Collections.Generic;
using System.Linq;
using System.Security;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MangoLogin
{
	/// <summary>
	/// Interaction logic for LoginView.xaml
	/// </summary>
	public partial class LoginView : UserControl
	{
		#region variables
		public static readonly DependencyProperty SecurePasswordProperty =
		DependencyProperty.RegisterAttached("SecurePassword", typeof(SecureString), typeof(LoginView));
		private bool isUserNameValid, isPasswordValid;
		#endregion

		#region Constructor
		/// <summary>
		/// This is used to initialize the User control and set the binding and its properties dynamically so that we can set the 
		/// Password box secure string property in view model.
		/// </summary>
		public LoginView()
		{
			InitializeComponent();
			Binding passwordBinding = new Binding(SecurePasswordProperty.Name);
			passwordBinding.ValidatesOnDataErrors = true;
			passwordBinding.UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged;
			MyPassword.SetBinding(SecurePasswordProperty, passwordBinding);
		}
		#endregion

		#region Uii Methods
		/// <summary>
		/// This is password changed event of password box.This is used to set the Secure Password property in Login View Model
		/// and then if Validation gives no error,it is used to enable the Sign In button on hand.
		/// </summary>
		/// <param name="sender">This is the sender of this event(which is password box in our case)</param>
		/// <param name="e"></param>
		private void MyPassword_PasswordChanged(object sender, RoutedEventArgs e)
		{
			if (MyPassword.SecurePassword != null)
			{
				((sender as PasswordBox).DataContext as LoginViewModel).SecurePassword = MyPassword.SecurePassword;
			}
			isPasswordValid = false;
			if (!Validation.GetHasError(MyPassword))
				isPasswordValid = true;
			btnSignIn.IsEnabled = (isUserNameValid && isPasswordValid) ? true : false;
		}
		/// <summary>
		/// This is the text changed event of Login ID textbox.This is used to check whether the Login ID entered is correct or not.
		/// If it is correct,it is used to auto generate domain URL from entered string.
		/// </summary>
		/// <param name="sender">This is sender of text changed event</param>
		/// <param name="e"></param>
		private void txtUsrName_TextChanged(object sender, RoutedEventArgs e)
		{
			isUserNameValid = false;
			if (!Validation.GetHasError(txtUsrName))
			{
				isUserNameValid = true;
				AutoGenerateDomainURL(txtUsrName.Text);
			}
			btnSignIn.IsEnabled = (isUserNameValid && isPasswordValid) ? true : false;
		}
		#endregion

		#region User Methods
		/// <summary>
		/// This funtion is used to generate domain URL automatically when a valid email is entered in Login ID field
		/// </summary>
		/// <param name="str">Takes the text of Login ID field.</param>
		private void AutoGenerateDomainURL(string str)
		{
			if (!String.IsNullOrEmpty(str))
			{
				str = str.Substring(str.IndexOf('@') + 1, (str.LastIndexOf('.') - 1 - str.IndexOf('@')));
				string modifiedString = str.Replace('.', '-');
				string domainURL = String.Concat("https://", modifiedString, ".mangopulse.com");
				txtDomainURL.Text = domainURL;
			}
		}
		#endregion
	}
}
